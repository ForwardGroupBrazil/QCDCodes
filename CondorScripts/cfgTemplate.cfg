process validReco = {

    # MessageLogger
    include "FWCore/MessageLogger/data/MessageLogger.cfi"
    replace MessageLogger.categories = {}
    replace MessageLogger.FrameworkJobReport.FwkJob.limit = 0  
    replace MessageLogger.cerr.FwkReport.limit = 0  

    # Event source
    source = PoolSource {
	untracked uint32 skipEvents = $skipEvents
	untracked vstring fileNames = {}
    }
    #inputFileBlock
    

    untracked PSet maxEvents = {untracked int32 input = $nEvents}

#------------ Output File  ------------------------------------------------
    include "DQMServices/Components/data/MEtoEDMConverter.cfi"
    path MEtoEDMConverter_step = {MEtoEDMConverter}

    module out=PoolOutputModule{
        untracked string fileName = "$outFileName.root" 
        untracked vstring outputCommands = { 
	    "drop *",
	    "keep *_*_*_validReco"
	}
    }

    include "Configuration/EventContent/data/EventContent.cff" 
    module MyOut = PoolOutputModule
    {
        untracked string fileName = "$outFileName_edm.root"
	using FEVTDEBUGHLTEventContent
    }
    
    endpath outpath = {MyOut}
  
#------------ Reco Sequence  ------------------------------------------------
#recoBlock

    
#------------ Analyzers  ----------------------------------------------------
#analyzerBlock


#------------ Schedule Reco + Validation ------------------------------------
 
    schedule = { pRecoOffline_step , postreco_step, postmuon_step, muonValidation_step, muonIdSupplement, MEtoEDMConverter_step, outpath }

}


