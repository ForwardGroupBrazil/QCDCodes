#include <vector>
#ifdef __MAKECINT__
//#pragma link C++ class vector<vector<float> >+;
//#pragma link C++ class vector<vector<int> >+;
#endif

#include "TTree.h"
#include "map.h"
#include "utility.h"
#include "string.h"
	Int_t	RunNumber;
	Int_t	EventNumber;
	Int_t	nMu;
	Int_t	nL2;
	Int_t	nL3;
	Int_t	nTkTracks;
	Int_t	nL3Cands;
	Int_t	l2NMuHits.first;
	Int_t	l2NMuHits.second;
	Int_t	l3AssociatedSimMuonNMuHits.first;
	Int_t	l3AssociatedSimMuonNMuHits.second;
	Int_t	l2AssociatedSimMuonNMuHits.first;
	Int_t	l2AssociatedSimMuonNMuHits.second;
	Int_t	nSimMuon;
	Int_t	simMuonNMuHits.first;
	Int_t	simMuonNMuHits.second;
	vector<int>	*muAllGlobalMuons;
	vector<int>	*muAllStandAloneMuons;
	vector<int>	*muAllTrackerMuons;
	vector<int>	*muTrackerMuonArbitrated;
	vector<int>	*muAllArbitrated;
	vector<int>	*muGlobalMuonPromptTight;
	vector<int>	*muTMLastStationLoose;
	vector<int>	*muTMLastStationTight;
	vector<int>	*muTMLastStationAngLoose;
	vector<int>	*muTMLastStationAngTight;
	vector<int>	*muTMOneStationAngLoose;
	vector<int>	*muTMOneStationAngTight;
	vector<int>	*muTM2DCompatibilityLoose;
	vector<int>	*muTM2DCompatibilityTight;
	vector<int>	*muTMOneStationLoose;
	vector<int>	*muTMOneStationTight;
	vector<int>	*muTMLastStationOptimizedLowPtLoose;
	vector<int>	*muTMLastStationOptimizedLowPtTight;
	vector<int>	*muGMTkChiCompatibility;
	vector<int>	*muGMStaChiCompatibility;
	vector<int>	*muGMTkKinkTight;
	vector<float>	*muCaloCompatibility;
	vector<float>	*muSegmentCompatibility;
	vector<float>	*muTrkKink;
	vector<float>	*muGlbKink;
	vector<float>	*muTrkRelChi2;
	vector<float>	*muStaRelChi2;
	vector<int>	*muIso03Valid;
	vector<float>	*muIso03sumPt;
	vector<float>	*muIso03emEt;
	vector<float>	*muIso03hadEt;
	vector<int>	*muIso03nTracks;
	vector<float>	*muIso03trackerVetoPt;
	vector<int>	*muNumberOfChambers;
	vector<int>	*muNumberOfMatches;
	vector<unsigned int>	*muStationMask;
	vector<int>	*muStationsValid;
	vector<int>	*muStationsAny;
	vector<int>	*muStationsDTValid;
	vector<int>	*muStationsDTAny;
	vector<int>	*muStationsRPCValid;
	vector<int>	*muStationsRPCAny;
	vector<int>	*muStationsCSCValid;
	vector<int>	*muStationsCSCAny;
	map<int,std::vector<int> >	*muNCSCSeg;
	map<int,std::vector<int> >	*muNDTSeg;
	map<int,std::vector<int> >	*muNRPCSeg;
	map<int,std::vector<int> >	*muNCSCHit;
	map<int,std::vector<int> >	*muNDTHit;
	map<int,std::vector<int> >	*muNRPCHit;
	map<int,std::vector<int> >	*muNCSCSegArb;
	map<int,std::vector<int> >	*muNDTSegArb;
	map<int,std::vector<int> >	*muNRPCSegArb;
	vector<double>	*l3P;
	vector<double>	*l3Px;
	vector<double>	*l3Py;
	vector<double>	*l3Pz;
	vector<double>	*l3Pt;
	vector<double>	*l3PtError;
	vector<double>	*l3Pt90;
	vector<double>	*l3Eta;
	vector<double>	*l3EtaError;
	vector<double>	*l3Phi;
	vector<double>	*l3PhiError;
	vector<double>	*l3D0;
	vector<double>	*l3D0Error;
	vector<int>	*l3NHits;
	vector<double>	*l3Charge;
	vector<double>	*l3Chi2;
	vector<double>	*l3Ndof;
	vector<double>	*l3CalIsoDeposit;
	vector<double>	*l3TrackIsoDeposit;
	vector<double>	*l3IsoTrackDR;
	vector<double>	*l3IsoTrackDRMinDelPt;
	vector<double>	*l3Dsz;
	vector<double>	*l3DszError;
	vector<double>	*l3Dxy;
	vector<double>	*l3DxyError;
	vector<double>	*l3Lambda;
	vector<double>	*l3LambdaError;
	vector<double>	*l3Qoverp;
	vector<double>	*l3QoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*l3ErrorMatrix;
	map<int,std::vector<int> >	*l3DetIds;
	map<int,std::vector<int> >	*l3SubdetIds;
	map<int,std::vector<int> >	*l3Component;
	vector<int>	*l3NMuHits;
	vector<int>	*l3NDTHits;
	vector<int>	*l3NCSCHits;
	vector<int>	*l3NRPCHits;
	map<int,std::vector<int> >	*l3MuStationNumber;
	map<int,std::vector<int> >	*l3RecHitsStatus;
	map<int,std::vector<double> >	*l3RecHitsX;
	map<int,std::vector<double> >	*l3RecHitsY;
	map<int,std::vector<double> >	*l3RecHitsZ;
	map<int,std::vector<double> >	*l3RecHitsXTM;
	map<int,std::vector<double> >	*l3RecHitsYTM;
	map<int,std::vector<double> >	*l3RecHitsZTM;
	map<int,std::vector<double> >	*l3RecHitsXTSOS;
	map<int,std::vector<double> >	*l3RecHitsYTSOS;
	map<int,std::vector<double> >	*l3RecHitsZTSOS;
	map<int,std::vector<double> >	*l3RecHitsPhiTM;
	map<int,std::vector<double> >	*l3RecHitsErrorTM;
	map<int,std::vector<double> >	*l3RecHitsPhiTSOS;
	vector<int>	*indexL2SeedingL3;
	vector<int>	*indexL3SeededFromL2;
	vector<int>	*l2SeedsL3;
	map<int,std::vector<double> >	*muonErrorMatrix;
	vector<double>	*tkTrackP;
	vector<double>	*tkTrackPx;
	vector<double>	*tkTrackPy;
	vector<double>	*tkTrackPz;
	vector<double>	*tkTrackPt;
	vector<double>	*tkTrackPtError;
	vector<double>	*tkTrackEta;
	vector<double>	*tkTrackEtaError;
	vector<double>	*tkTrackPhi;
	vector<double>	*tkTrackPhiError;
	vector<double>	*tkTrackD0;
	vector<double>	*tkTrackD0Error;
	vector<int>	*tkTrackNHits;
	vector<double>	*tkTrackCharge;
	vector<double>	*tkTrackChi2;
	vector<double>	*tkTrackNdof;
	vector<double>	*tkTrackDsz;
	vector<double>	*tkTrackDszError;
	vector<double>	*tkTrackDxy;
	vector<double>	*tkTrackDxyError;
	vector<double>	*tkTrackLambda;
	vector<double>	*tkTrackLambdaError;
	vector<double>	*tkTrackQoverp;
	vector<double>	*tkTrackQoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*tkTrackErrorMatrix;
	map<int,std::vector<int> >	*tkTrackDetIds;
	map<int,std::vector<int> >	*tkTrackSubdetIds;
	map<int,std::vector<int> >	*tkTrackRecHitsStatus;
	map<int,std::vector<double> >	*tkTrackRecHitsX;
	map<int,std::vector<double> >	*tkTrackRecHitsY;
	map<int,std::vector<double> >	*tkTrackRecHitsZ;
	vector<double>	*l2P;
	vector<double>	*l2Px;
	vector<double>	*l2Py;
	vector<double>	*l2Pz;
	vector<double>	*l2Pt;
	vector<double>	*l2PtError;
	vector<double>	*l2Pt90;
	vector<double>	*l2Eta;
	vector<double>	*l2EtaError;
	vector<double>	*l2Phi;
	vector<double>	*l2PhiError;
	vector<double>	*l2D0;
	vector<double>	*l2D0Error;
	vector<int>	*l2NHits;
	vector<double>	*l2Charge;
	vector<double>	*l2Chi2;
	vector<double>	*l2Ndof;
	map<int,std::vector<int> >	*l2DetIds;
	map<int,std::vector<int> >	*l2SubdetIds;
	map<int,std::vector<int> >	*l2Component;
	map<int,int>	*l2NMuHits;
	map<int,std::vector<int> >	*l2MuStationNumber;
	map<int,std::vector<int> >	*l2RecHitsStatus;
	map<int,std::vector<double> >	*l2RecHitsX;
	map<int,std::vector<double> >	*l2RecHitsY;
	map<int,std::vector<double> >	*l2RecHitsZ;
	vector<double>	*l2CalIsoDeposit;
	vector<double>	*l2Dsz;
	vector<double>	*l2DszError;
	vector<double>	*l2Dxy;
	vector<double>	*l2DxyError;
	vector<double>	*l2Lambda;
	vector<double>	*l2LambdaError;
	vector<double>	*l2Qoverp;
	vector<double>	*l2QoverpError;
	vector<ROOT::Math::SMatrix<double,5,5,ROOT::Math::MatRepSym<double,5> > >	*l2ErrorMatrix;
	vector<int>	*l3IsAssociated;
	vector<int>	*l3ParentID;
	vector<int>	*l3MotherBinNumber;
	vector<double>	*l3AssociationVar;
	vector<int>	*l3AssociationPdgId;
	vector<unsigned int>	*l3AssociationMyBit;
	vector<double>	*l3AssociationVtxX;
	vector<double>	*l3AssociationVtxY;
	vector<double>	*l3AssociationVtxZ;
	vector<int>	*l3AssociatedSimMuonIndex;
	vector<double>	*l3AssociatedSimMuonPt;
	vector<double>	*l3AssociatedSimMuonEta;
	vector<double>	*l3AssociatedSimMuonPhi;
	vector<int>	*l3AssociatedSimMuonNHits;
	map<int,std::vector<int> >	*l3AssociatedSimMuonDetIds;
	map<int,int>	*l3AssociatedSimMuonNMuHits;
	map<int,std::vector<int> >	*l3AssociatedSimMuonMuStationNumber;
	vector<double>	*l3AssociatedSimMuonDsz;
	vector<double>	*l3AssociatedSimMuonDxy;
	vector<double>	*l3AssociatedSimMuonLambda;
	vector<double>	*l3AssociatedSimMuonQoverP;
	vector<int>	*tkTrackIsAssociated;
	vector<int>	*tkTrackParentID;
	vector<int>	*tkTrackMotherBinNumber;
	vector<double>	*tkTrackAssociationVar;
	vector<int>	*tkTrackAssociationPdgId;
	vector<unsigned int>	*tkTrackAssociationMyBit;
	vector<double>	*tkTrackAssociationVtxX;
	vector<double>	*tkTrackAssociationVtxY;
	vector<double>	*tkTrackAssociationVtxZ;
	vector<double>	*tkTrackAssociatedSimMuonPt;
	vector<double>	*tkTrackAssociatedSimMuonEta;
	vector<double>	*tkTrackAssociatedSimMuonPhi;
	vector<int>	*tkTrackAssociatedSimMuonNHits;
	map<int,std::vector<int> >	*tkTrackAssociatedSimMuonDetIds;
	vector<double>	*tkTrackAssociatedSimMuonDsz;
	vector<double>	*tkTrackAssociatedSimMuonDxy;
	vector<double>	*tkTrackAssociatedSimMuonLambda;
	vector<double>	*tkTrackAssociatedSimMuonQoverP;
	vector<int>	*l2IsAssociated;
	vector<int>	*l2ParentID;
	vector<int>	*l2MotherBinNumber;
	vector<double>	*l2AssociationVar;
	vector<int>	*l2AssociationPdgId;
	vector<unsigned int>	*l2AssociationMyBit;
	vector<double>	*l2AssociationVtxX;
	vector<double>	*l2AssociationVtxY;
	vector<double>	*l2AssociationVtxZ;
	vector<double>	*l2AssociatedSimMuonPt;
	vector<double>	*l2AssociatedSimMuonEta;
	vector<double>	*l2AssociatedSimMuonPhi;
	vector<int>	*l2AssociatedSimMuonNHits;
	map<int,std::vector<int> >	*l2AssociatedSimMuonDetIds;
	map<int,int>	*l2AssociatedSimMuonNMuHits;
	map<int,std::vector<int> >	*l2AssociatedSimMuonMuStationNumber;
	vector<double>	*l2AssociatedSimMuonDsz;
	vector<double>	*l2AssociatedSimMuonDxy;
	vector<double>	*l2AssociatedSimMuonLambda;
	vector<double>	*l2AssociatedSimMuonQoverP;
	vector<int>	*simMuonParentID;
	vector<int>	*simMuonMotherBinNumber;
	vector<double>	*simMuonPt;
	vector<double>	*simMuonEta;
	vector<double>	*simMuonPhi;
	vector<unsigned int>	*simMuonMyBit;
	vector<double>	*simMuonVtxX;
	vector<double>	*simMuonVtxY;
	vector<double>	*simMuonVtxZ;
	vector<int>	*simMuonNHits;
	map<int,std::vector<int> >	*simMuonDetIds;
	map<int,int>	*simMuonNMuHits;
	map<int,std::vector<int> >	*simMuonMuStationNumber;
	vector<double>	*simMuonDsz;
	vector<double>	*simMuonDxy;
	vector<double>	*simMuonLambda;
	vector<double>	*simMuonQoverP;
	vector<int>	*simToL3Associated;
	vector<double>	*simToL3AssociationVar;
	vector<int>	*simToL3RecoIndex;
	vector<int>	*simToTkAssociated;
	vector<double>	*simToTkAssociationVar;
	vector<int>	*simToTkRecoIndex;
	vector<int>	*simToL2Associated;
	vector<double>	*simToL2AssociationVar;
	vector<int>	*simToL2RecoIndex;
void Init(TTree *tree) {
	tree->SetBranchAddress("RunNumber", &RunNumber);
	tree->SetBranchAddress("EventNumber", &EventNumber);
	tree->SetBranchAddress("nMu", &nMu);
	tree->SetBranchAddress("nL2", &nL2);
	tree->SetBranchAddress("nL3", &nL3);
	tree->SetBranchAddress("nTkTracks", &nTkTracks);
	tree->SetBranchAddress("nL3Cands", &nL3Cands);
	tree->SetBranchAddress("nSimMuon", &nSimMuon);
	tree->SetBranchAddress("muAllGlobalMuons", &muAllGlobalMuons);
	tree->SetBranchAddress("muAllStandAloneMuons", &muAllStandAloneMuons);
	tree->SetBranchAddress("muAllTrackerMuons", &muAllTrackerMuons);
	tree->SetBranchAddress("muTrackerMuonArbitrated", &muTrackerMuonArbitrated);
	tree->SetBranchAddress("muAllArbitrated", &muAllArbitrated);
	tree->SetBranchAddress("muGlobalMuonPromptTight", &muGlobalMuonPromptTight);
	tree->SetBranchAddress("muTMLastStationLoose", &muTMLastStationLoose);
	tree->SetBranchAddress("muTMLastStationTight", &muTMLastStationTight);
	tree->SetBranchAddress("muTMLastStationAngLoose", &muTMLastStationAngLoose);
	tree->SetBranchAddress("muTMLastStationAngTight", &muTMLastStationAngTight);
	tree->SetBranchAddress("muTMOneStationAngLoose", &muTMOneStationAngLoose);
	tree->SetBranchAddress("muTMOneStationAngTight", &muTMOneStationAngTight);
	tree->SetBranchAddress("muTM2DCompatibilityLoose", &muTM2DCompatibilityLoose);
	tree->SetBranchAddress("muTM2DCompatibilityTight", &muTM2DCompatibilityTight);
	tree->SetBranchAddress("muTMOneStationLoose", &muTMOneStationLoose);
	tree->SetBranchAddress("muTMOneStationTight", &muTMOneStationTight);
	tree->SetBranchAddress("muTMLastStationOptimizedLowPtLoose", &muTMLastStationOptimizedLowPtLoose);
	tree->SetBranchAddress("muTMLastStationOptimizedLowPtTight", &muTMLastStationOptimizedLowPtTight);
	tree->SetBranchAddress("muGMTkChiCompatibility", &muGMTkChiCompatibility);
	tree->SetBranchAddress("muGMStaChiCompatibility", &muGMStaChiCompatibility);
	tree->SetBranchAddress("muGMTkKinkTight", &muGMTkKinkTight);
	tree->SetBranchAddress("muCaloCompatibility", &muCaloCompatibility);
	tree->SetBranchAddress("muSegmentCompatibility", &muSegmentCompatibility);
	tree->SetBranchAddress("muTrkKink", &muTrkKink);
	tree->SetBranchAddress("muGlbKink", &muGlbKink);
	tree->SetBranchAddress("muTrkRelChi2", &muTrkRelChi2);
	tree->SetBranchAddress("muStaRelChi2", &muStaRelChi2);
	tree->SetBranchAddress("muIso03Valid", &muIso03Valid);
	tree->SetBranchAddress("muIso03sumPt", &muIso03sumPt);
	tree->SetBranchAddress("muIso03emEt", &muIso03emEt);
	tree->SetBranchAddress("muIso03hadEt", &muIso03hadEt);
	tree->SetBranchAddress("muIso03nTracks", &muIso03nTracks);
	tree->SetBranchAddress("muIso03trackerVetoPt", &muIso03trackerVetoPt);
	tree->SetBranchAddress("muNumberOfChambers", &muNumberOfChambers);
	tree->SetBranchAddress("muNumberOfMatches", &muNumberOfMatches);
	tree->SetBranchAddress("muStationMask", &muStationMask);
	tree->SetBranchAddress("muStationsValid", &muStationsValid);
	tree->SetBranchAddress("muStationsAny", &muStationsAny);
	tree->SetBranchAddress("muStationsDTValid", &muStationsDTValid);
	tree->SetBranchAddress("muStationsDTAny", &muStationsDTAny);
	tree->SetBranchAddress("muStationsRPCValid", &muStationsRPCValid);
	tree->SetBranchAddress("muStationsRPCAny", &muStationsRPCAny);
	tree->SetBranchAddress("muStationsCSCValid", &muStationsCSCValid);
	tree->SetBranchAddress("muStationsCSCAny", &muStationsCSCAny);
	tree->SetBranchAddress("muNCSCSeg", &muNCSCSeg);
	tree->SetBranchAddress("muNDTSeg", &muNDTSeg);
	tree->SetBranchAddress("muNRPCSeg", &muNRPCSeg);
	tree->SetBranchAddress("muNCSCHit", &muNCSCHit);
	tree->SetBranchAddress("muNDTHit", &muNDTHit);
	tree->SetBranchAddress("muNRPCHit", &muNRPCHit);
	tree->SetBranchAddress("muNCSCSegArb", &muNCSCSegArb);
	tree->SetBranchAddress("muNDTSegArb", &muNDTSegArb);
	tree->SetBranchAddress("muNRPCSegArb", &muNRPCSegArb);
	tree->SetBranchAddress("l3P", &l3P);
	tree->SetBranchAddress("l3Px", &l3Px);
	tree->SetBranchAddress("l3Py", &l3Py);
	tree->SetBranchAddress("l3Pz", &l3Pz);
	tree->SetBranchAddress("l3Pt", &l3Pt);
	tree->SetBranchAddress("l3PtError", &l3PtError);
	tree->SetBranchAddress("l3Pt90", &l3Pt90);
	tree->SetBranchAddress("l3Eta", &l3Eta);
	tree->SetBranchAddress("l3EtaError", &l3EtaError);
	tree->SetBranchAddress("l3Phi", &l3Phi);
	tree->SetBranchAddress("l3PhiError", &l3PhiError);
	tree->SetBranchAddress("l3D0", &l3D0);
	tree->SetBranchAddress("l3D0Error", &l3D0Error);
	tree->SetBranchAddress("l3NHits", &l3NHits);
	tree->SetBranchAddress("l3Charge", &l3Charge);
	tree->SetBranchAddress("l3Chi2", &l3Chi2);
	tree->SetBranchAddress("l3Ndof", &l3Ndof);
	tree->SetBranchAddress("l3CalIsoDeposit", &l3CalIsoDeposit);
	tree->SetBranchAddress("l3TrackIsoDeposit", &l3TrackIsoDeposit);
	tree->SetBranchAddress("l3IsoTrackDR", &l3IsoTrackDR);
	tree->SetBranchAddress("l3IsoTrackDRMinDelPt", &l3IsoTrackDRMinDelPt);
	tree->SetBranchAddress("l3Dsz", &l3Dsz);
	tree->SetBranchAddress("l3DszError", &l3DszError);
	tree->SetBranchAddress("l3Dxy", &l3Dxy);
	tree->SetBranchAddress("l3DxyError", &l3DxyError);
	tree->SetBranchAddress("l3Lambda", &l3Lambda);
	tree->SetBranchAddress("l3LambdaError", &l3LambdaError);
	tree->SetBranchAddress("l3Qoverp", &l3Qoverp);
	tree->SetBranchAddress("l3QoverpError", &l3QoverpError);
	tree->SetBranchAddress("l3ErrorMatrix", &l3ErrorMatrix);
	tree->SetBranchAddress("l3DetIds", &l3DetIds);
	tree->SetBranchAddress("l3SubdetIds", &l3SubdetIds);
	tree->SetBranchAddress("l3Component", &l3Component);
	tree->SetBranchAddress("l3NMuHits", &l3NMuHits);
	tree->SetBranchAddress("l3NDTHits", &l3NDTHits);
	tree->SetBranchAddress("l3NCSCHits", &l3NCSCHits);
	tree->SetBranchAddress("l3NRPCHits", &l3NRPCHits);
	tree->SetBranchAddress("l3MuStationNumber", &l3MuStationNumber);
	tree->SetBranchAddress("l3RecHitsStatus", &l3RecHitsStatus);
	tree->SetBranchAddress("l3RecHitsX", &l3RecHitsX);
	tree->SetBranchAddress("l3RecHitsY", &l3RecHitsY);
	tree->SetBranchAddress("l3RecHitsZ", &l3RecHitsZ);
	tree->SetBranchAddress("l3RecHitsXTM", &l3RecHitsXTM);
	tree->SetBranchAddress("l3RecHitsYTM", &l3RecHitsYTM);
	tree->SetBranchAddress("l3RecHitsZTM", &l3RecHitsZTM);
	tree->SetBranchAddress("l3RecHitsXTSOS", &l3RecHitsXTSOS);
	tree->SetBranchAddress("l3RecHitsYTSOS", &l3RecHitsYTSOS);
	tree->SetBranchAddress("l3RecHitsZTSOS", &l3RecHitsZTSOS);
	tree->SetBranchAddress("l3RecHitsPhiTM", &l3RecHitsPhiTM);
	tree->SetBranchAddress("l3RecHitsErrorTM", &l3RecHitsErrorTM);
	tree->SetBranchAddress("l3RecHitsPhiTSOS", &l3RecHitsPhiTSOS);
	tree->SetBranchAddress("indexL2SeedingL3", &indexL2SeedingL3);
	tree->SetBranchAddress("indexL3SeededFromL2", &indexL3SeededFromL2);
	tree->SetBranchAddress("l2SeedsL3", &l2SeedsL3);
	tree->SetBranchAddress("muonErrorMatrix", &muonErrorMatrix);
	tree->SetBranchAddress("tkTrackP", &tkTrackP);
	tree->SetBranchAddress("tkTrackPx", &tkTrackPx);
	tree->SetBranchAddress("tkTrackPy", &tkTrackPy);
	tree->SetBranchAddress("tkTrackPz", &tkTrackPz);
	tree->SetBranchAddress("tkTrackPt", &tkTrackPt);
	tree->SetBranchAddress("tkTrackPtError", &tkTrackPtError);
	tree->SetBranchAddress("tkTrackEta", &tkTrackEta);
	tree->SetBranchAddress("tkTrackEtaError", &tkTrackEtaError);
	tree->SetBranchAddress("tkTrackPhi", &tkTrackPhi);
	tree->SetBranchAddress("tkTrackPhiError", &tkTrackPhiError);
	tree->SetBranchAddress("tkTrackD0", &tkTrackD0);
	tree->SetBranchAddress("tkTrackD0Error", &tkTrackD0Error);
	tree->SetBranchAddress("tkTrackNHits", &tkTrackNHits);
	tree->SetBranchAddress("tkTrackCharge", &tkTrackCharge);
	tree->SetBranchAddress("tkTrackChi2", &tkTrackChi2);
	tree->SetBranchAddress("tkTrackNdof", &tkTrackNdof);
	tree->SetBranchAddress("tkTrackDsz", &tkTrackDsz);
	tree->SetBranchAddress("tkTrackDszError", &tkTrackDszError);
	tree->SetBranchAddress("tkTrackDxy", &tkTrackDxy);
	tree->SetBranchAddress("tkTrackDxyError", &tkTrackDxyError);
	tree->SetBranchAddress("tkTrackLambda", &tkTrackLambda);
	tree->SetBranchAddress("tkTrackLambdaError", &tkTrackLambdaError);
	tree->SetBranchAddress("tkTrackQoverp", &tkTrackQoverp);
	tree->SetBranchAddress("tkTrackQoverpError", &tkTrackQoverpError);
	tree->SetBranchAddress("tkTrackErrorMatrix", &tkTrackErrorMatrix);
	tree->SetBranchAddress("tkTrackDetIds", &tkTrackDetIds);
	tree->SetBranchAddress("tkTrackSubdetIds", &tkTrackSubdetIds);
	tree->SetBranchAddress("tkTrackRecHitsStatus", &tkTrackRecHitsStatus);
	tree->SetBranchAddress("tkTrackRecHitsX", &tkTrackRecHitsX);
	tree->SetBranchAddress("tkTrackRecHitsY", &tkTrackRecHitsY);
	tree->SetBranchAddress("tkTrackRecHitsZ", &tkTrackRecHitsZ);
	tree->SetBranchAddress("l2P", &l2P);
	tree->SetBranchAddress("l2Px", &l2Px);
	tree->SetBranchAddress("l2Py", &l2Py);
	tree->SetBranchAddress("l2Pz", &l2Pz);
	tree->SetBranchAddress("l2Pt", &l2Pt);
	tree->SetBranchAddress("l2PtError", &l2PtError);
	tree->SetBranchAddress("l2Pt90", &l2Pt90);
	tree->SetBranchAddress("l2Eta", &l2Eta);
	tree->SetBranchAddress("l2EtaError", &l2EtaError);
	tree->SetBranchAddress("l2Phi", &l2Phi);
	tree->SetBranchAddress("l2PhiError", &l2PhiError);
	tree->SetBranchAddress("l2D0", &l2D0);
	tree->SetBranchAddress("l2D0Error", &l2D0Error);
	tree->SetBranchAddress("l2NHits", &l2NHits);
	tree->SetBranchAddress("l2Charge", &l2Charge);
	tree->SetBranchAddress("l2Chi2", &l2Chi2);
	tree->SetBranchAddress("l2Ndof", &l2Ndof);
	tree->SetBranchAddress("l2DetIds", &l2DetIds);
	tree->SetBranchAddress("l2SubdetIds", &l2SubdetIds);
	tree->SetBranchAddress("l2Component", &l2Component);
	tree->SetBranchAddress("l2NMuHits", &l2NMuHits);
	tree->SetBranchAddress("l2MuStationNumber", &l2MuStationNumber);
	tree->SetBranchAddress("l2RecHitsStatus", &l2RecHitsStatus);
	tree->SetBranchAddress("l2RecHitsX", &l2RecHitsX);
	tree->SetBranchAddress("l2RecHitsY", &l2RecHitsY);
	tree->SetBranchAddress("l2RecHitsZ", &l2RecHitsZ);
	tree->SetBranchAddress("l2CalIsoDeposit", &l2CalIsoDeposit);
	tree->SetBranchAddress("l2Dsz", &l2Dsz);
	tree->SetBranchAddress("l2DszError", &l2DszError);
	tree->SetBranchAddress("l2Dxy", &l2Dxy);
	tree->SetBranchAddress("l2DxyError", &l2DxyError);
	tree->SetBranchAddress("l2Lambda", &l2Lambda);
	tree->SetBranchAddress("l2LambdaError", &l2LambdaError);
	tree->SetBranchAddress("l2Qoverp", &l2Qoverp);
	tree->SetBranchAddress("l2QoverpError", &l2QoverpError);
	tree->SetBranchAddress("l2ErrorMatrix", &l2ErrorMatrix);
	tree->SetBranchAddress("l3IsAssociated", &l3IsAssociated);
	tree->SetBranchAddress("l3ParentID", &l3ParentID);
	tree->SetBranchAddress("l3MotherBinNumber", &l3MotherBinNumber);
	tree->SetBranchAddress("l3AssociationVar", &l3AssociationVar);
	tree->SetBranchAddress("l3AssociationPdgId", &l3AssociationPdgId);
	tree->SetBranchAddress("l3AssociationMyBit", &l3AssociationMyBit);
	tree->SetBranchAddress("l3AssociationVtxX", &l3AssociationVtxX);
	tree->SetBranchAddress("l3AssociationVtxY", &l3AssociationVtxY);
	tree->SetBranchAddress("l3AssociationVtxZ", &l3AssociationVtxZ);
	tree->SetBranchAddress("l3AssociatedSimMuonIndex", &l3AssociatedSimMuonIndex);
	tree->SetBranchAddress("l3AssociatedSimMuonPt", &l3AssociatedSimMuonPt);
	tree->SetBranchAddress("l3AssociatedSimMuonEta", &l3AssociatedSimMuonEta);
	tree->SetBranchAddress("l3AssociatedSimMuonPhi", &l3AssociatedSimMuonPhi);
	tree->SetBranchAddress("l3AssociatedSimMuonNHits", &l3AssociatedSimMuonNHits);
	tree->SetBranchAddress("l3AssociatedSimMuonDetIds", &l3AssociatedSimMuonDetIds);
	tree->SetBranchAddress("l3AssociatedSimMuonNMuHits", &l3AssociatedSimMuonNMuHits);
	tree->SetBranchAddress("l3AssociatedSimMuonMuStationNumber", &l3AssociatedSimMuonMuStationNumber);
	tree->SetBranchAddress("l3AssociatedSimMuonDsz", &l3AssociatedSimMuonDsz);
	tree->SetBranchAddress("l3AssociatedSimMuonDxy", &l3AssociatedSimMuonDxy);
	tree->SetBranchAddress("l3AssociatedSimMuonLambda", &l3AssociatedSimMuonLambda);
	tree->SetBranchAddress("l3AssociatedSimMuonQoverP", &l3AssociatedSimMuonQoverP);
	tree->SetBranchAddress("tkTrackIsAssociated", &tkTrackIsAssociated);
	tree->SetBranchAddress("tkTrackParentID", &tkTrackParentID);
	tree->SetBranchAddress("tkTrackMotherBinNumber", &tkTrackMotherBinNumber);
	tree->SetBranchAddress("tkTrackAssociationVar", &tkTrackAssociationVar);
	tree->SetBranchAddress("tkTrackAssociationPdgId", &tkTrackAssociationPdgId);
	tree->SetBranchAddress("tkTrackAssociationMyBit", &tkTrackAssociationMyBit);
	tree->SetBranchAddress("tkTrackAssociationVtxX", &tkTrackAssociationVtxX);
	tree->SetBranchAddress("tkTrackAssociationVtxY", &tkTrackAssociationVtxY);
	tree->SetBranchAddress("tkTrackAssociationVtxZ", &tkTrackAssociationVtxZ);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonPt", &tkTrackAssociatedSimMuonPt);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonEta", &tkTrackAssociatedSimMuonEta);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonPhi", &tkTrackAssociatedSimMuonPhi);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonNHits", &tkTrackAssociatedSimMuonNHits);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonDetIds", &tkTrackAssociatedSimMuonDetIds);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonDsz", &tkTrackAssociatedSimMuonDsz);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonDxy", &tkTrackAssociatedSimMuonDxy);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonLambda", &tkTrackAssociatedSimMuonLambda);
	tree->SetBranchAddress("tkTrackAssociatedSimMuonQoverP", &tkTrackAssociatedSimMuonQoverP);
	tree->SetBranchAddress("l2IsAssociated", &l2IsAssociated);
	tree->SetBranchAddress("l2ParentID", &l2ParentID);
	tree->SetBranchAddress("l2MotherBinNumber", &l2MotherBinNumber);
	tree->SetBranchAddress("l2AssociationVar", &l2AssociationVar);
	tree->SetBranchAddress("l2AssociationPdgId", &l2AssociationPdgId);
	tree->SetBranchAddress("l2AssociationMyBit", &l2AssociationMyBit);
	tree->SetBranchAddress("l2AssociationVtxX", &l2AssociationVtxX);
	tree->SetBranchAddress("l2AssociationVtxY", &l2AssociationVtxY);
	tree->SetBranchAddress("l2AssociationVtxZ", &l2AssociationVtxZ);
	tree->SetBranchAddress("l2AssociatedSimMuonPt", &l2AssociatedSimMuonPt);
	tree->SetBranchAddress("l2AssociatedSimMuonEta", &l2AssociatedSimMuonEta);
	tree->SetBranchAddress("l2AssociatedSimMuonPhi", &l2AssociatedSimMuonPhi);
	tree->SetBranchAddress("l2AssociatedSimMuonNHits", &l2AssociatedSimMuonNHits);
	tree->SetBranchAddress("l2AssociatedSimMuonDetIds", &l2AssociatedSimMuonDetIds);
	tree->SetBranchAddress("l2AssociatedSimMuonNMuHits", &l2AssociatedSimMuonNMuHits);
	tree->SetBranchAddress("l2AssociatedSimMuonMuStationNumber", &l2AssociatedSimMuonMuStationNumber);
	tree->SetBranchAddress("l2AssociatedSimMuonDsz", &l2AssociatedSimMuonDsz);
	tree->SetBranchAddress("l2AssociatedSimMuonDxy", &l2AssociatedSimMuonDxy);
	tree->SetBranchAddress("l2AssociatedSimMuonLambda", &l2AssociatedSimMuonLambda);
	tree->SetBranchAddress("l2AssociatedSimMuonQoverP", &l2AssociatedSimMuonQoverP);
	tree->SetBranchAddress("simMuonParentID", &simMuonParentID);
	tree->SetBranchAddress("simMuonMotherBinNumber", &simMuonMotherBinNumber);
	tree->SetBranchAddress("simMuonPt", &simMuonPt);
	tree->SetBranchAddress("simMuonEta", &simMuonEta);
	tree->SetBranchAddress("simMuonPhi", &simMuonPhi);
	tree->SetBranchAddress("simMuonMyBit", &simMuonMyBit);
	tree->SetBranchAddress("simMuonVtxX", &simMuonVtxX);
	tree->SetBranchAddress("simMuonVtxY", &simMuonVtxY);
	tree->SetBranchAddress("simMuonVtxZ", &simMuonVtxZ);
	tree->SetBranchAddress("simMuonNHits", &simMuonNHits);
	tree->SetBranchAddress("simMuonDetIds", &simMuonDetIds);
	tree->SetBranchAddress("simMuonNMuHits", &simMuonNMuHits);
	tree->SetBranchAddress("simMuonMuStationNumber", &simMuonMuStationNumber);
	tree->SetBranchAddress("simMuonDsz", &simMuonDsz);
	tree->SetBranchAddress("simMuonDxy", &simMuonDxy);
	tree->SetBranchAddress("simMuonLambda", &simMuonLambda);
	tree->SetBranchAddress("simMuonQoverP", &simMuonQoverP);
	tree->SetBranchAddress("simToL3Associated", &simToL3Associated);
	tree->SetBranchAddress("simToL3AssociationVar", &simToL3AssociationVar);
	tree->SetBranchAddress("simToL3RecoIndex", &simToL3RecoIndex);
	tree->SetBranchAddress("simToTkAssociated", &simToTkAssociated);
	tree->SetBranchAddress("simToTkAssociationVar", &simToTkAssociationVar);
	tree->SetBranchAddress("simToTkRecoIndex", &simToTkRecoIndex);
	tree->SetBranchAddress("simToL2Associated", &simToL2Associated);
	tree->SetBranchAddress("simToL2AssociationVar", &simToL2AssociationVar);
	tree->SetBranchAddress("simToL2RecoIndex", &simToL2RecoIndex);
}
