process Demo =  {
    
    untracked PSet maxEvents = {untracked int32 input = 1 }
    
    source = PoolSource 
    { 
     # replace 'myfile.root' with the source file you want to use
	untracked uint32 skipEvents = 186
	untracked vstring fileNames = {
	    'file:/tmp/aeverett/missingTkPart.root'
	} 
    }
    /*
    replace PoolSource.fileNames = {
	'/store/relval/2008/5/4/RelVal-RelValZMM-1209251027-STARTUP_V2-3rd/0000/164B91A4-1F1A-DD11-8857-001D09F2527B.root',
	'/store/relval/2008/5/4/RelVal-RelValZMM-1209251027-STARTUP_V2-3rd/0000/28CD9B00-201A-DD11-9FB2-000423D60FF6.root'
    }
    */
    
// Suspect event in run 6628 event 22858 (record number ~1088)
//    replace PoolSource.fileNames = {
//	'/store/mc/CSA08/MuonPT5/ALCARECO/1PB_V2_RECO_MuAlZMuMu_v1/0019/04B846D7-3624-DD11-9BD2-001D09F23D1D.root'
//    }
    
// Suspect event in run 8119 event 1617 (record number ~187)
//    replace PoolSource.fileNames = {
//	'/store/mc/CSA08/MuonPT5/GEN-SIM-RAW/STARTUP_V2_v2/0000/000D6325-5518-DD11-9EE6-00163691DDA2.root'
//    }

    replace PoolSource.fileName = {
	"file:/afs/cern.ch/user/a/aeverett/scratch0/RelValTTbar_CMSSW_2_1_4_STARTUP_V5_v1_gfitIneq_skim.root"
    }

#keep the logging output to a nice level
//    service = MessageLogger {}

    service = MessageLogger
    {
	untracked vstring destinations = { "cout" }
	untracked vstring categories     = { "MissingTracker","GlobalTrajectoryBuilderBase","TrackFitters","MuonTrackLoader"}
	untracked vstring debugModules   = { "demo", "globalMuons" }
	untracked PSet cout = {
            untracked string threshold = "DEBUG"
            untracked bool noLineBreaks = true
            untracked bool noTimeStamps = true
            untracked PSet preEventProcessing = { untracked int32 limit = 0 }
            untracked PSet FwkReport = { untracked int32 limit = 0 }
            untracked PSet FwkJob    = { untracked int32 limit = 0 }
            untracked PSet default   = { untracked int32 limit = 0 }
            untracked PSet MissingTracker = { untracked int32 limit = -1}
            untracked PSet GlobalTrajectoryBuilderBase = { untracked int32 limit = -1}
            untracked PSet TrackFitters = { untracked int32 limit = 0}
            untracked PSet MuonTrackLoader = { untracked int32 limit = -1}
	}
    }
  
  
    include "Configuration/StandardSequences/data/RawToDigi.cff"
    include "Configuration/StandardSequences/data/Reconstruction.cff"
    include "Configuration/StandardSequences/data/FrontierConditions_GlobalTag.cff"
    replace GlobalTag.globaltag = "STARTUP_V5::All"
    
    sequence muontracking2 = {MuonSeed, standAloneMuons, globalMuons}
    sequence muontracking_with_TeVRefinement2 = {muontracking2} //,tevMuons}
//sequence muonreco2 = {muontracking2,muonIdProducerSequence}
    sequence muonrecowith_TeVRefinemen2 = {muontracking_with_TeVRefinement2, muonIdProducerSequence}
    
    
    sequence muonreco_plus_isolation2 = {muonrecowith_TeVRefinemen2, muIsolation}
    sequence globalreco2 = {offlineBeamSpot&  recopixelvertexing,ckftracks & ecalClusters & (caloTowersRec, recoJets) &  metreco & muonreco_plus_isolation2 }
    
//////
//////
#all three are true by default
#02 BW is false
#03 Service is false (and BW)
replace standAloneMuons.STATrajBuilderParameters.RefitterParameters.EnableRPCMeasurement = false
replace standAloneMuons.STATrajBuilderParameters.BWFilterParameters.EnableRPCMeasurement = false
replace standAloneMuons.ServiceParameters.RPCLayers = false
//////
//////

    sequence re_tracking =   {
////     ckftracks,
////   //muontracking
////     standAloneMuons,globalMuons
	localreco,globalreco2
    }
    
    
    module demo = MissingTracker { 
//	untracked InputTag muLabel  = ALCARECOMuAlZMuMu:SelectedMuons
	untracked InputTag muLabel = muons
//	untracked InputTag glbLabel = ALCARECOMuAlZMuMu:GlobalMuon
	untracked InputTag glbLabel = globalMuons
    }
    
    
#------------ End path ------------------------------------------------
    module out=PoolOutputModule{
        untracked string fileName = "/data/aeverett/output.root"
        untracked vstring outputCommands = { "keep *"
	}
    }
    

    path p = {RawToDigi, re_tracking , demo} 
//    endpath theEnd = { out }
}
